# .github/workflows/build-scan-publish.yml
name: Build, Scan, and Publish Docker Image

on:
  # Run on pushes to main/master, which will build, scan, AND push the image
  push:
    branches:
      - main
      - master
  # Run on pull requests to main/master, which will build and scan, but NOT push
  pull_request:
    branches:
      - main
      - master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read      # to checkout the repo
  packages: write     # to publish to GitHub Container Registry

jobs:
  build-scan-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        id: build # Add an ID to this step to reference it later if needed
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          # Only push the image on a 'push' event to the main/master branch.
          # For pull requests, this will be 'false', so it only builds the image locally.
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
          tags: |
            ghcr.io/m0n7i-labs/vulnerable-java:latest
            ghcr.io/m0n7i-labs/vulnerable-java:${{ github.sha }}

      - name: Download Wiz CLI
        run: curl -o wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64 && chmod +x wizcli

      - name: Authenticate to Wiz
        # Ensure you have WIZ_CLIENT_ID and WIZ_CLIENT_SECRET configured in your repository secrets
        run: ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"
        env:
          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

      - name: Run wiz-cli docker image scan
        # Scans the 'latest' tag of the image that was just built locally
        # If the scan finds vulnerabilities that violate the policy, it will fail this step and the entire workflow
        run: ./wizcli docker scan --image ghcr.io/m0n7i-labs/vulnerable-java:latest --policy "Default vulnerabilities policy"

      - name: Fetch digest of Docker image for Graph enrichment
        # This step only runs if the scan above succeeds
        run: ./wizcli docker tag --image ghcr.io/m0n7i-labs/vulnerable-java:latest
